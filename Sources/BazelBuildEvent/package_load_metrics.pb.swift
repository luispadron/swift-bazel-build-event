// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: src/main/java/com/google/devtools/build/lib/packages/metrics/package_load_metrics.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

/// Copyright 2020 The Bazel Authors. All rights reserved.
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///    http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Message used to concisely report all package metrics.
public struct Devtools_Build_Lib_Packages_Metrics_PackageLoadMetrics: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Name of the package.
  public var name: String {
    get {return _name ?? String()}
    set {_name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return self._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {self._name = nil}

  /// Wall-time duration it took to construct the package.
  public var loadDuration: SwiftProtobuf.Google_Protobuf_Duration {
    get {return _loadDuration ?? SwiftProtobuf.Google_Protobuf_Duration()}
    set {_loadDuration = newValue}
  }
  /// Returns true if `loadDuration` has been explicitly set.
  public var hasLoadDuration: Bool {return self._loadDuration != nil}
  /// Clears the value of `loadDuration`. Subsequent reads from it will return its default value.
  public mutating func clearLoadDuration() {self._loadDuration = nil}

  /// Number of targets created in the package.
  public var numTargets: UInt64 {
    get {return _numTargets ?? 0}
    set {_numTargets = newValue}
  }
  /// Returns true if `numTargets` has been explicitly set.
  public var hasNumTargets: Bool {return self._numTargets != nil}
  /// Clears the value of `numTargets`. Subsequent reads from it will return its default value.
  public mutating func clearNumTargets() {self._numTargets = nil}

  /// Number of Starlark computation steps required to create the package.
  public var computationSteps: UInt64 {
    get {return _computationSteps ?? 0}
    set {_computationSteps = newValue}
  }
  /// Returns true if `computationSteps` has been explicitly set.
  public var hasComputationSteps: Bool {return self._computationSteps != nil}
  /// Clears the value of `computationSteps`. Subsequent reads from it will return its default value.
  public mutating func clearComputationSteps() {self._computationSteps = nil}

  /// Number of transitive Starlark load()s required to create the package.
  public var numTransitiveLoads: UInt64 {
    get {return _numTransitiveLoads ?? 0}
    set {_numTransitiveLoads = newValue}
  }
  /// Returns true if `numTransitiveLoads` has been explicitly set.
  public var hasNumTransitiveLoads: Bool {return self._numTransitiveLoads != nil}
  /// Clears the value of `numTransitiveLoads`. Subsequent reads from it will return its default value.
  public mutating func clearNumTransitiveLoads() {self._numTransitiveLoads = nil}

  /// Numeric value given to the memory and general accounting costs associated
  /// with a loaded package. Values are an approximate but reasonable proxy for
  /// the real storage costs of a package.
  public var packageOverhead: UInt64 {
    get {return _packageOverhead ?? 0}
    set {_packageOverhead = newValue}
  }
  /// Returns true if `packageOverhead` has been explicitly set.
  public var hasPackageOverhead: Bool {return self._packageOverhead != nil}
  /// Clears the value of `packageOverhead`. Subsequent reads from it will return its default value.
  public mutating func clearPackageOverhead() {self._packageOverhead = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _name: String? = nil
  fileprivate var _loadDuration: SwiftProtobuf.Google_Protobuf_Duration? = nil
  fileprivate var _numTargets: UInt64? = nil
  fileprivate var _computationSteps: UInt64? = nil
  fileprivate var _numTransitiveLoads: UInt64? = nil
  fileprivate var _packageOverhead: UInt64? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "devtools.build.lib.packages.metrics"

extension Devtools_Build_Lib_Packages_Metrics_PackageLoadMetrics: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PackageLoadMetrics"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "load_duration"),
    3: .standard(proto: "num_targets"),
    4: .standard(proto: "computation_steps"),
    5: .standard(proto: "num_transitive_loads"),
    6: .standard(proto: "package_overhead"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self._name) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._loadDuration) }()
      case 3: try { try decoder.decodeSingularUInt64Field(value: &self._numTargets) }()
      case 4: try { try decoder.decodeSingularUInt64Field(value: &self._computationSteps) }()
      case 5: try { try decoder.decodeSingularUInt64Field(value: &self._numTransitiveLoads) }()
      case 6: try { try decoder.decodeSingularUInt64Field(value: &self._packageOverhead) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._name {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    } }()
    try { if let v = self._loadDuration {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    } }()
    try { if let v = self._numTargets {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 3)
    } }()
    try { if let v = self._computationSteps {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 4)
    } }()
    try { if let v = self._numTransitiveLoads {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 5)
    } }()
    try { if let v = self._packageOverhead {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 6)
    } }()
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Devtools_Build_Lib_Packages_Metrics_PackageLoadMetrics, rhs: Devtools_Build_Lib_Packages_Metrics_PackageLoadMetrics) -> Bool {
    if lhs._name != rhs._name {return false}
    if lhs._loadDuration != rhs._loadDuration {return false}
    if lhs._numTargets != rhs._numTargets {return false}
    if lhs._computationSteps != rhs._computationSteps {return false}
    if lhs._numTransitiveLoads != rhs._numTransitiveLoads {return false}
    if lhs._packageOverhead != rhs._packageOverhead {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
